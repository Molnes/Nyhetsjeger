package dashboard_pages

import (
	"github.com/Molnes/Nyhetsjeger/internal/web_server/web/views/components/layout_components"
	"github.com/Molnes/Nyhetsjeger/internal/models/users/user_ranking"
	"fmt"

	"github.com/Molnes/Nyhetsjeger/internal/utils/data"
	"github.com/Molnes/Nyhetsjeger/internal/models/labels"
	"github.com/google/uuid"
)

templ LeaderboardPage(rankings []user_ranking.UserRanking, labels []labels.Label, selectedLabelID uuid.UUID) {
	@layout_components.DashBoardLayout("Toppliste") {
		<div class="w-full flex flex-col items-center overflow-x-auto">
			<h1 class="text-3xl font-bold  mt-10 mb-10">Toppliste</h1>
			@LabelSelectorComponent(labels, selectedLabelID)
			@AdminScoreboardComponent(rankings)
		</div>
	}
}

// Component to select label for displaying the correct leaderboard
// takes in a list of labels to display in the dropdown
// can be searched if the list is long
templ LabelSelectorComponent(labels []labels.Label, selectedLabelID uuid.UUID) {
	<div class="w-full flex justify-center">
		<div class="flex items-center">
			<label for="label" class="text-lg font-bold mr-2">Velg Etikett:</label>
			<select
				id="label"
				class="border-2 border-cindigo rounded-lg px-2 py-1"
			>
				for _, label := range labels {
					<option
						value={ label.ID.String() }
						href={ fmt.Sprintf("/dashboard/leaderboard?label-id=%s", label.ID.String()) }
						hx-get={ fmt.Sprintf("/dashboard/leaderboard?label-id=%s", label.ID.String()) }
						hx-push-url="true"
						hx-swap="outerHTML"
						hx-target="body"
						if label.ID == selectedLabelID {
							selected
						}
					>
						{ label.Name }
					</option>
				}
			</select>
		</div>
	</div>
}

// Component to display the leaderboard
templ AdminScoreboardComponent(rankings []user_ranking.UserRanking) {
	<div class="mx-auto">
		<table
			class="border-2 border-cindigo mr-auto text-left rounded-card border-separate border-spacing-0 overflow-hidden"
		>
			<colgroup>
				<col class="min-w-22"/>
				<col class="min-w-48"/>
				<col class="min-w-30"/>
			</colgroup>
			<thead>
				<tr class="border-collapse bg-cindigo text-white text-center">
					<th class="px-4 py-3">Plass</th>
					<th class="px-4 py-3">Navn</th>
					<th class="px-4 py-3">Poeng</th>
				</tr>
			</thead>
			<tbody>
				if len(rankings) == 0 {
					<tr class="text-center">
						<td class="px-4 py-3 border" colspan="3">Fant ingen brukere i topplisten!</td>
					</tr>
				}
				for _, user := range rankings {
					<tr
						class="text-center"
					>
						if user.Placement == 0 {
							<td class="px-4 py-3">-</td>
						} else if user.Placement == 1 {
							<td class="px-4 py-3">
								<div class="mx-auto rounded-1/2 w-6 h-6 leading-6 bg-yellow-500 text-yellow-900 font-bold">{ fmt.Sprintf("%d", user.Placement) }</div>
							</td>
						} else if user.Placement == 2 {
							<td class="px-4 py-3">
								<div class="mx-auto rounded-1/2 w-6 h-6 leading-6 bg-gray-400 text-gray-800 font-bold">{ fmt.Sprintf("%d", user.Placement) }</div>
							</td>
						} else if user.Placement == 3 {
							<td class="px-4 py-3">
								<div class="mx-auto rounded-1/2 w-6 h-6 leading-6 bg-amber-600 text-amber-950 font-bold">{ fmt.Sprintf("%d", user.Placement) }</div>
							</td>
						} else {
							<td class="px-4 py-3">{ fmt.Sprintf("%d", user.Placement) }</td>
						}
						<td class="px-4 py-3"><a href={ templ.URL(fmt.Sprintf("/dashboard/user?user-id=%s", user.UserID.String())) }>{ user.Username } </a> </td>
						<td class="px-4 py-3">{ fmt.Sprintf("%s", data_handling.FormatNumberWithSpaces(user.Points)) }</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
}
