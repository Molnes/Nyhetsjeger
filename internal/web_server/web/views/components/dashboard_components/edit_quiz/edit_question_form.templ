package dashboard_components

import (
	"fmt"

	"github.com/Molnes/Nyhetsjeger/internal/models/articles"
	"github.com/Molnes/Nyhetsjeger/internal/models/questions"
	"github.com/Molnes/Nyhetsjeger/internal/web_server/web/views/components"
)

// Constants for the input names (for HTTP requests)
const QuestionArticleURL = "question-article-url"
const QuestionText = "question-text"
const QuestionAlternative1 = "question-alternative-1"
const QuestionAlternative2 = "question-alternative-2"
const QuestionAlternative3 = "question-alternative-3"
const QuestionAlternative4 = "question-alternative-4"
const QuestionCorrectAlternative = "correct-alternative"
const QuestionImageURL = "question-image-url"
const QuestionPoints = "question-points"

// The form includes a list of articles to base the question on, the question itself,
// 4 answer alternatives (optional 2 to 4), and an image.
templ EditQuestionForm(question questions.Question, articles *[]articles.Article, quizID string) {
	<form id="edit-question-form">
		<div class="flex flex-row items-center gap-3 mb-5">
			<h2 class="font-bold text-3xl">Rediger spørsmål</h2>
			@components.LoadingIndicator()
		</div>
		// Article
		<label for="articles-list" class="block font-bold mb-1">Basert på artikkel (URL)</label>
		<input
			id="articles-list"
			name={ QuestionArticleURL }
			list="articles"
			class="bg-purple-100 border border-clightindigo rounded-input w-full px-4 py-2 mb-5"
		/>
		<datalist id="articles">
			for _, article := range *articles {
				<option value={ article.ArticleURL.String() }></option>
			}
		</datalist>
		// Question
		<label for="question" class="block font-bold mb-1">Spørsmål</label>
		<input
			id="question"
			name={ QuestionText }
			type="text"
			class="bg-purple-100 border border-clightindigo rounded-input w-full px-4 py-2 mb-5"
			value={ question.Text }
		/>
		<fieldset class="block mb-5">
			// Alternatives
			// TODO: Possibly do this better
			<table>
				<thead>
					<tr>
						<th class="w-full text-left">Svar alternativer (Fyll inn mellom 2 til 4)</th>
						<th class="text-right">Riktig svar</th>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td class="py-1">
							<input
								id="question-1"
								name={ QuestionAlternative1 }
								type="text"
								class="bg-purple-100 border border-clightindigo rounded-input w-full px-4 py-2"
								if len(question.Alternatives) >= 1 {
									value={ question.Alternatives[0].Text }
								}
							/>
						</td>
						<td>
							<input
								type="radio"
								name={ QuestionCorrectAlternative }
								value="1"
								class="block ml-auto mr-0 h-6 w-6 accent-cindigo"
								checked
							/>
						</td>
					</tr>
					<tr>
						<td class="py-1">
							<input
								id="question-2"
								name={ QuestionAlternative2 }
								type="text"
								class="bg-purple-100 border border-clightindigo rounded-input w-full px-4 py-2"
								if len(question.Alternatives) >= 2 {
									value={ question.Alternatives[1].Text }
								}
							/>
						</td>
						<td>
							<input
								type="radio"
								name={ QuestionCorrectAlternative }
								value="2"
								class="block ml-auto mr-0 h-6 w-6 accent-cindigo"
							/>
						</td>
					</tr>
					<tr>
						<td class="py-1">
							<input
								id="question-3"
								name={ QuestionAlternative3 }
								type="text"
								class="bg-purple-100 border border-clightindigo rounded-input w-full px-4 py-2"
								if len(question.Alternatives) >= 3 {
									value={ question.Alternatives[2].Text }
								}
							/>
						</td>
						<td>
							<input
								type="radio"
								name={ QuestionCorrectAlternative }
								value="3"
								class="block ml-auto mr-0 h-6 w-6 accent-cindigo"
							/>
						</td>
					</tr>
					<tr>
						<td class="py-1">
							<input
								id="question-4"
								name={ QuestionAlternative4 }
								type="text"
								class="bg-purple-100 border border-clightindigo rounded-input w-full px-4 py-2"
								if len(question.Alternatives) >= 4 {
									value={ question.Alternatives[3].Text }
								}
							/>
						</td>
						<td>
							<input
								type="radio"
								name={ QuestionCorrectAlternative }
								value="4"
								class="block ml-auto mr-0 h-6 w-6 accent-cindigo"
							/>
						</td>
					</tr>
				</tbody>
			</table>
		</fieldset>
		// Image
		<label for="question-image" class="block font-bold mb-1">Bilde</label>
		@EditImageInput(fmt.Sprintf("/api/v1/admin/question/edit-image?question-id=%s", question.ID), &question.ImageURL, QuestionImageURL, false)
		// Points
		<label for="points" class="block mt-5 font-bold mb-1">Poeng</label>
		<input
			id="points"
			name={ QuestionPoints }
			type="number"
			class="bg-purple-100 border border-clightindigo rounded-input w-full px-4 py-2 mb-5"
			min="0"
			value={ fmt.Sprint(question.Points) }
		/>
		// Buttons
		<div class="flex flex-row justify-between gap-5 mt-5">
			<button
				id="close-modal-button"
				onclick="closeModal()"
				type="button"
				class="bg-red-400 font-bold px-4 py-2 w-full rounded-button"
			>Avbryt</button>
			<button
				id="submit-question-button"
				type="submit"
				class="bg-clightindigo font-bold px-4 py-2 w-full rounded-button"
				hx-post={ fmt.Sprintf("/api/v1/admin/question/create-new?quiz-id=%s", quizID) }
				hx-swap="beforeend"
				hx-target="#question-list"
				hx-sync="closest form:abort"
				hx-indicator="previous .htmx-indicator"
			>Lagre</button>
		</div>
	</form>
	<script>
		// Prevent form submission by default
    const inputs = document.querySelectorAll('#edit-question-form input');

    // Add event listener to each input element
    inputs.forEach(input => {
        input.addEventListener('keydown', function(event) {
            if (event.key === 'Enter') {
                event.preventDefault();
            }
        });
    });

		// Close the modal
		function closeModal() {
			const modal = document.getElementById("question-modal");
			modal.close();
		}

		// Close the modal after successful submit
		document.body.addEventListener("htmx:afterSwap", (event) => {
			if (event.detail.target.id === "question-list") {
				closeModal();
			}
		});
	</script>
}
