package side_menu

import "github.com/Molnes/Nyhetsjeger/internal/web_server/web/views/components/icons"
import "github.com/Molnes/Nyhetsjeger/internal/models/users/user_roles"

type SideMenuItem int

const (
	Home           = 0
	Leaderboard    = 1
	AccessSettings = 2

	MENU_CONTEXT_KEY = "chosen-side-menu-item"
)

templ SideMenu() {
	<div class="fixed h-full text-center w-52 bg-clightindigo flex flex-col">
		<h1 class="text-2xl bg-cindigo text-white py-4 px-3 mb-4">Quiz Admin Panel</h1>
		<nav>
			<ul class="space-y-4">
				@menuItem("Hjem", "/dashboard", isSelected(ctx, Home)) {
					@icons.Home(20, "currentColor", 20, 20)
				}
				@menuItem("Toppliste", "/dashboard/leaderboard", isSelected(ctx, Leaderboard)) {
					@icons.Trophy(20, "currentColor", 20, 20)
				}
				if isUserOrganizationAdmin(ctx) {
					@menuItem("Tilgang", "/dashboard/access-settings", isSelected(ctx, AccessSettings)) {
						@icons.Gear(20, "currentColor", 20, 20)
					}
				}
			</ul>
		</nav>
		<button hx-post="/auth/logout" class="block mt-auto w-full py-4 hover:text-cindigo focus:text-cindigo cursor-pointer font-bold">Logg ut</button>
	</div>
}

// Checks the context for the chosen side menu item and compares it to the current item. If value not set, returns false.
func isSelected(ctx context.Context, item SideMenuItem) bool {
	chosen, ok := ctx.Value(MENU_CONTEXT_KEY).(SideMenuItem)
	if !ok {
		return false
	}
	return chosen == item
}

// Checks if the current user's role is user_roles.OrganizationAdmin
func isUserOrganizationAdmin(ctx context.Context) bool {
	user, ok := ctx.Value(user_roles.ROLE_CONTEXT_KEY).(user_roles.Role)
	if !ok {
		return false
	}
	return user == user_roles.OrganizationAdmin
}

templ menuItem(text string, href string, highlight bool) {
	<li class="ml-4">
		<a
			href={ templ.SafeURL(href) }
			if highlight {
				class="py-3 rounded-l-button flex flex-row items-center pl-8 gap-2 bg-white "
			} else {
				class="py-3 rounded-l-button flex flex-row items-center pl-8 gap-2 bg-purple-100 hover:bg-white"
			}
		>
			{ children... }
			{ text }
		</a>
	</li>
}
