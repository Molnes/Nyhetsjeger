package user_admin

import "github.com/Molnes/Nyhetsjeger/internal/models/users/usernames"

script onRefresh() {
	for (const [key, value] of deleteMap.entries()) {
	var row = document.getElementById(key);
	if (row) {
		let parent = row.parentElement;
		parent.classList.add("bg-red-500", "border-b", "border-red-700");
		parent.getElementsByClassName("del-button")[0].classList.add("hidden");
		parent.getElementsByClassName("undo-button")[0].classList.remove("hidden");
	}
	}

	for (const [key, value] of editMap.entries()) {
	var row = document.getElementById(key);
	if (row) {
		let values = editMap.get(key);
		let parent = row.parentElement;
		parent.getElementsByClassName("undo-button")[0].classList.remove("hidden");
		row.value = values[1];
	}
	}
}

script onSave() {
	fetch("/api/v1/admin/username/delete", {
		method: "DELETE",
		headers: {
			"Content-Type": "application/json",
		},
		body: JSON.stringify(Array.from(deleteMap.keys()))
	}).then(response => {
		if (/* response.ok */ true) {
			deleteMap.clear();
			//Clear deletemap in sessionStorage.
			sessionStorage.removeItem("deletemap");
		}
	});

	let tableEditMap = new Map();
	tableEditMap.set("adjective-table", []);
	tableEditMap.set("noun-table", []);

	for (const [key, value] of editMap.entries()) {
		let table = tableRowMap.get(key);
		tableEditMap.get(table).push(value);
	}

	fetch("/api/v1/admin/username/edit", {
		method: "PUT",
		headers: {
			"Content-Type": "application/json",
		},
		body: JSON.stringify(Array.from(tableEditMap.entries()))
	}).then(response => {
		if (/* response.ok */ true) {
			editMap.clear();
			tableRowMap.clear();

			sessionStorage.removeItem("editmap");
			sessionStorage.removeItem("tablerowmap");
		}
	});

	location.reload();
}

// Tables of the two components an username is created from: Nouns and adjectives
templ UsernameTables(uai *usernames.UsernameAdminInfo) {
	<script>
	var deleteMap;
	var editMap;
	if(sessionStorage.deletemap === undefined) {
		deleteMap = new Map();
	} else {
		deleteMap = new Map(JSON.parse(sessionStorage.deletemap));
	}

	if(sessionStorage.editmap === undefined) {
		editMap = new Map();
	} else {
		editMap = new Map(JSON.parse(sessionStorage.editmap));
	}
	</script>
	<div id="tables-wrapper" class="flex gap-6 md:gap-12 xl:gap-24 flex-col sm:flex-row">
		@WordTable(uai.Adjectives, "Adjektiv", uai.AdjPage, uai.AdjWordCount, "adjective-table", "adj", uai.UsernamesPerPage)
		@WordTable(uai.Nouns, "Substantiv", uai.NounPage, uai.NounWordCount, "noun-table", "noun", uai.UsernamesPerPage)
	</div>
	@onRefresh()
}
