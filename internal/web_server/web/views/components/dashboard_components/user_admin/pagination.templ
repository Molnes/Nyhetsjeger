package user_admin

import "fmt"
import "strconv"

// Pagination is the main component for the pagination
templ Pagination(maxPages int, page int, parentTableID string, queryParam string) {
	@prevButton(page, parentTableID)
	@pageNumber(page, maxPages)
	@nextButton(page, maxPages, parentTableID)
	@insertHxGet(parentTableID, queryParam)
}

// handlePagination ensures that the page number is within the range of the maximum pages
func handlePagination(page int, maxPages int) int {
	if page < 1 {
		page = 1
	} else if page > maxPages {
		page = maxPages
	}
	return page
}

// insertHxGet is a helper function that inserts the hx-get attribute to the pagination buttons
script insertHxGet(parentTableID string, queryParam string) {
	let params = new URL(document.location.toString()).searchParams;
	let aPage = params.get("apage");
	let nPage = params.get("npage");

	if (aPage == null) {
		aPage = 1;
	}
	if (nPage == null) {
		nPage = 1;
	}

	let param = queryParam == "apage" ? aPage : nPage;

	let oppositeQUery = queryParam == "apage" ? "npage" : "apage";
	let oppositeParam = queryParam == "apage" ? nPage : aPage;
	

	const urlHold = "/api/v1/admin/username/table?"

	var url = window.location.href.split('?')[0];

	document.getElementById( `prev-button-${parentTableID}` ).setAttribute("href", url + "?" + queryParam + "=" + (parseInt(param) - 1) + "&" + oppositeQUery + "=" + oppositeParam);
	document.getElementById( `next-button-${parentTableID}` ).setAttribute("href", url + "?" + queryParam + "=" + (parseInt(param) + 1) + "&" + oppositeQUery + "=" + oppositeParam);
}

// pageNumber is the component showing the current page number and the maximum pages
templ pageNumber(currentPage int, maxPages int) {
	if maxPages != 1 {
		<button class="border-cindigo bg-clightindigo border-y-2 text-indigo-300 px-3 py-1" disabled>
			{ fmt.Sprintf("%v of %v", handlePagination(currentPage, maxPages), maxPages) }
		</button>
	} else {
		<button class="border-cindigo border-y-2 text-cindigo px-3 py-1">
			<input class="w-12 border border-clightindigo rounded-input text-center" type="text" value={ strconv.Itoa(currentPage) }/> of { strconv.Itoa(maxPages) }
		</button>
	}
}

// prevButton is the component for the previous button
templ prevButton(page int, parentTableID string) {
	if page == 1 {
		<button
			id={ fmt.Sprintf("prev-button-%v", parentTableID) }
			class="border-cindigo bg-clightindigo border-2 text-indigo-300 font-bold px-3 py-1"
			disabled
		>
			&lt;
		</button>
	} else {
		<a
			id={ fmt.Sprintf("prev-button-%v", parentTableID) }
			href=""
			hx-boost="true"
			class="border-cindigo border-2 text-cindigo font-bold px-3 py-1 inline-block"
		>&lt;</a>
	}
}

// nextButton is the component for the next button
templ nextButton(page int, maxPages int, parentTableID string) {
	if page == maxPages {
		<button id={ fmt.Sprintf("next-button-%v", parentTableID) } class="border-cindigo bg-clightindigo border-2 text-indigo-300 font-bold px-3 py-1" disabled>
			&gt;
		</button>
	} else {
		<a
			id={ fmt.Sprintf("next-button-%v", parentTableID) }
			href=""
			hx-boost="true"
			class="border-cindigo border-2 text-cindigo font-bold px-3 py-1 inline-block"
		>&gt;</a>
	}
}
