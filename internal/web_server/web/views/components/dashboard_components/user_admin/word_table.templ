package user_admin

import "math"
import "github.com/Molnes/Nyhetsjeger/internal/models/users/usernames"

// Calculates the maximum amount of pages needed to display all users.
func calculateMaxPages(userAmount int) int {
	return int(math.Ceil(float64(userAmount) / float64(usernames.UsernamesPerPage)))
}

// Returns the content of a row in the table, if the index is out of bounds, return an empty string.
func setRowContent(words []string, i int) string {
	if i >= len(words) {
		return ""
	} else {
		return words[i]

	}
}

// A table that displays a list of words, includes pagination component.
templ WordTable(words []string, tableName string, page int, wordCount int, tableID string, pagnationParam string) {
	<table
		id={ tableID }
		class="table-fixed border-separate border-spacing-0 rounded-card border border-gray-400 bg-white
    	[&_td]:border-black [&_tr]:h-8"
	>
		<thead>
			<tr class="[&>th]:border-black">
				<th class="px-4">{ tableName } </th>
			</tr>
		</thead>
		<tbody
			class="
                [&_tr:nth-child(odd)]:bg-purple-100  
                [&>tr:last-child]:border-b [&>tr:last-child]:border-black"
		>
			for i := range usernames.UsernamesPerPage {
				<tr>
					<td class="px-4 h-8">{ setRowContent(words, i) }</td>
				</tr>
			}
		</tbody>
		<tfoot>
			<tr>
				<td class="text-right border-t border-black" colspan="4">
					@Pagination(tableID, pagnationParam, calculateMaxPages(wordCount), page)
				</td>
			</tr>
		</tfoot>
	</table>
}
