package quiz_components

import "github.com/Molnes/Nyhetsjeger/internal/data/questions"
import "github.com/google/uuid"
import "fmt"

type Optional struct {
	correctAnswered []uuid.UUID
}

type Option func(*Optional) Optional

// Sets the correct and answered answer to the question
func CorrectAndAnswered(correct uuid.UUID, answered uuid.UUID) Option {
	return func(o *Optional) Optional {
		o.correctAnswered = append(o.correctAnswered, correct, answered)
		return *o
	}
}

var answeredCorrectly bool = false

// Checks if the answer has been selected
func isSelected(id uuid.UUID, option ...Option) bool {
	o := Optional{}
	for _, opt := range option {
		o = opt(&o)
	}

	for i := 0; i < len(o.correctAnswered); i += 2 {
		if o.correctAnswered[i] == id && o.correctAnswered[i+1] == id {
			answeredCorrectly = true
			return true
		}

		if o.correctAnswered[i+1] == id {
			return true
		}
	}

	return false

}

// Checks if the question has been answered correctly or not.
func isCorrect(id uuid.UUID, option ...Option) bool {
	o := Optional{}
	for _, opt := range option {
		o = opt(&o)
	}

	for i := 0; i < len(o.correctAnswered); i += 2 {
		if o.correctAnswered[i] == id {
			return true
		}
	}

	return false
}

//Renders all the answers to the question in the form of buttons, and if the question has been answered, it will also display if the answer was correct or not.
//Takes in the possible questions, and an optional Option to check if the question has been answered and if it was answered correctly.
templ Answers(answers []questions.Alternative, questionId uuid.UUID, option ...Option) {
	<div id="answers-wrapper" class="w-80 flex flex-col [&>*]:mt-4">
		if (option != nil) {
			for _ , answer := range answers {
				@selectedAnswerButton(answer.Text, option != nil, isCorrect(answer.ID, option...), isSelected(answer.ID, option...), 0.24989)
			}
			if (answeredCorrectly) {
				<p class="font-bold">Riktig!</p>
			} else {
				<p class="font-bold">Feil!</p>
			}
			<button id="next-question" type="button" class="h-16 bg-blue-500" hx-post={ fmt.Sprintf("/nextquestion?questionid=%s", questionId) } answer.Text hx-trigger="click" hx-target="#content" hx-swap="innerHTML">Neste spørsmål</button>
		} else {
			for _ , answer := range answers {
				@AnswerButton(answer.ID, questionId, answer.Text)
			}
		}
	</div>
}
