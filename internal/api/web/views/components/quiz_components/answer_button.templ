package quiz_components

import "fmt"
import "github.com/google/uuid"

type OptionalABTN struct {
	selected bool
	disabled bool
}

type OptionABTN func(*OptionalABTN) OptionalABTN

//Selects the button
func SelectedAButton() OptionABTN {
	return func(o *OptionalABTN) OptionalABTN {
		o.selected = true
		return *o
	}
}

//Disables the button
func DisabledAButton() OptionABTN {
	return func(o *OptionalABTN) OptionalABTN {
		o.disabled = true
		return *o
	}
}

//Assigns the correct style to the button based upon the options
func assignCorrectStyle(option ...OptionABTN) string {
	style := ""
	for _, o := range option {
		if o(&OptionalABTN{}).selected {
			style += "border-4 border-blue-500 border-solid"
		}
	}
	return style
}

//Checks if the button should be disabled based upon the options
func checkIfIsDisabled(option ...OptionABTN) bool {
	for _, o := range option {
		if o(&OptionalABTN{}).disabled {
			return true
		}
	}
	return false
}

// AnswerButton is a button that represents an answer to a question. Takes a string and a variadic amount of options
templ AnswerButton(id uuid.UUID, text string, option ...OptionABTN) {
	<button id={ text } type="button" class={ "p-3 bg-white", assignCorrectStyle(option...) } disabled?={ checkIfIsDisabled(option...) } hx-get={ fmt.Sprintf("/nextquestion?answer=%s", id) } hx-trigger="click" hx-target="#answers-wrapper" hx-swap="outerHTML">
		{ text }
	</button>
}
